openapi: 3.0.3
info:
  title: Lekki Property API
  description: This is the documentation of the Lekki Property API. The API exposed 3 endpoints for creating, updating and fetching real estate property data
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: "{ENV.BASE_SERVER_URL}/api/v1"
tags:
  - name: property
    description: Add, Update, View property data
    externalDocs:
      description: Find out more
      url: http://swagger.io

paths:
  /properties:
    post:
      tags:
        - properties
      summary: Add new property
      description: Add new property
      operationId: addProperty
      requestBody:
        description: Add a new property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/Property'         
        '400':
          description: Bad request
        '405':
          description: Validation exception
      security:
        - lekki_property_auth:
            - write:properties
            - read:properties
            
    get:
      tags:
        - properties
      summary: Fetch single or multiple properties
      description: Fetch single or multiple properties
      operationId: fetchProperty
      parameters:
        - name: id
          in: query
          description: property id. When provided takes precedence over other query parameters and returns a single unique property matching id.
          required: false
          schema:
            type: string
        - name: owner
          in: query
          description: property owner
          required: false
          schema:
            type: string
        - name: property_address
          in: query
          description: property address
          required: false
          schema:
            type: string
        - name: property_type
          in: query
          description: property type
          required: false
          schema:
            type: string
        - name: num_bedrooms
          in: query
          description: number of bedrooms to filter
          required: false
          schema:
            type: integer
        - name: num_sitting_rooms
          in: query
          description: number of sitting rooms to filter
          required: false
          schema:
            type: integer
        - name: num_kitchen
          in: query
          description: number of kitchens to filter
          required: false
          schema:
            type: integer
        - name: num_toilets
          in: query
          description: number of toilets to filter
          required: false
          schema:
            type: integer
        - name: num_bathrooms
          in: query
          description: number of bathrooms to filter
          required: false
          schema:
            type: integer
        
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'         
        '400':
          description: Bad request
        '405':
          description: Validation exception
      security:
        - lekki_property_auth:
            - write:properties
            - read:properties
            
  
  /properties/{id}:
    put:
      tags:
        - properties
      summary: Update property
      description: Update existing property by id
      operationId: updateProperty
      parameters:
        - name: id
          in: path
          description: property id
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/Property'         
        '400':
          description: Bad request
        '405':
          description: Validation exception
      security:
        - lekki_property_auth:
            - write:properties
            - read:properties
          
    
            
            

    

components:
  schemas:
    Property:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        property_address:
          type: string
          example: 12, water ways side, lekki, Nigeria
        property_type:
          type: string
          example: apartment
        num_bedrooms:
          type: integer
          format: int64
          example: 3
        num_sitting_rooms:
          type: integer
          format: int64
          example: 3
        num_kitchen:
          type: integer
          format: int64
          example: 3
        num_toilets:
          type: integer
          format: int64
          example: 3
        num_bathrooms:
          type: integer
          format: int64
          example: 3
        owner:
          type: string
          example: Mr Brown
        description:
          type: string
          example: Awesome house beside lake chad
        valid_from:
          type: string
          format: date
        valid_to:
          type: string
          format: date
          
    PropertyUpdate:
      type: object
      properties:
        num_bedrooms:
          type: integer
          format: int64
          example: 3
        num_sitting_rooms:
          type: integer
          format: int64
          example: 3
        num_kitchen:
          type: integer
          format: int64
          example: 3
        num_toilets:
          type: integer
          format: int64
          example: 3
        num_bathrooms:
          type: integer
          format: int64
          example: 3
        description:
          type: string
          example: Awesome house beside lake chad
        valid_from:
          type: string
          format: date
        valid_to:
          type: string
          format: date

        
  securitySchemes:
    lekki_property_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:properties: modify or add properties
            read:properties: read properties
